C/++

statické jazyky
efektivně namapované na strojové instrukce
dobré pro velké věci i malé čipy
explicitní management dynamické paměti

#include SE CELÉ NAHRADÍ obsahem té knihovny

ZÁPIS
CELÝCH ČÍSEL
decimální
- jsou znaménková, píšu normálně
hexadecimální
- předpona 0x
binární
- předpona 0b
osmičková
- předpona prostě 0
FLOATŮ - normálně
BOOLEAN - true, false
STRINGŮ - v uvozovkách
CHARŮ - v apostrofech, pokud je v jiném typu než char, tak je to int

ESCAPE SEKVENCE
\n LF
\r CR
\t TAB - nejbližší násobek 8
\\ jedno zpětné lomítko
\' apostrof
\" uvozovka
\xab char hodnoty 0xab - na divnoznaky

TYPY PROMĚNNÝCH
základní
- char dnes 8-bitů, na unicody jiné typy 
- int znaménkové ARDUINO MÁ INT 16BIT, RECODEX 32BIT
modifikátory
- short (libovolný číselný typ, počet bitů <= int) 16/ard 16
- long (>= int) 64/ard 32
- long long (>= long) 64/ard 64
- můžu si vynutit int32_t
- signed, unsigned
floatové
- float, double, long double 7-5-4
další
- void, bool (v C _Bool)
velikostní
- size_t - dle počítače, na mém 64bitů, podle paměťového prostoru

IMPLICITNÍ KONVERZE TYPU
- menší přiřazuju do většího - v pohodě
- větší do menšího - varování, potenciální ztráta dat
- při operacích je výsledek ten větší z těch dvou, operace se v něm i provádí
EXPLICITNÍ KONVERZE TYPU, CAST
double d;
float f = (float)d;

PROMĚNNÁ
= pojmenovaná hodnota v paměti
- deklarace, inicializace (jinak náhodný obsah)
- typ auto
- životnost, viditelnost

ŽIVOTNOST
lokální
- existuje pouze v bloku {}
globální
- libovolná proměnná deklarovaná mimo tělo fce
- žije po celou dobu programu
- zavoláno už před main
- automaticky inicializovaná na nulu

VIDITELNOST
- globální i lokální až od okamžiku inicializace
- nevidím si navzájem do bloků
statické
- static int je lokální s globální životností
- při opakovaném volání funkce se hodnota zachovává


